{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "LotterySalesCSV",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable2",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "lookup1"
				},
				{
					"name": "derivedColumn2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Column_1 as string,",
				"          Column_2 as string,",
				"          Column_3 as string,",
				"          Column_4 as string,",
				"          Column_5 as string,",
				"          Column_6 as string,",
				"          Column_7 as string,",
				"          Column_8 as string,",
				"          Column_9 as string,",
				"          Column_10 as string,",
				"          Column_11 as string,",
				"          Column_12 as string,",
				"          Column_13 as string,",
				"          Column_14 as string,",
				"          Column_15 as string,",
				"          Column_16 as string,",
				"          Column_17 as string,",
				"          Column_18 as string,",
				"          Column_19 as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source(output(",
				"          RaceTracStoreId as integer,",
				"          IGTStoreId as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source2",
				"source1 derive(TransDate = toDate(\r",
				"    substring(Column_1, 5, 4) + '-' + \r",
				"    substring(Column_1, 1, 2) + '-' + \r",
				"    substring(Column_1, 3, 2), \r",
				"    'yyyy-MM-dd'\r",
				")) ~> derivedColumn1",
				"derivedColumn2, source2 lookup(Column_2 == IGTStoreId,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookup1",
				"derivedColumn1 derive(Column_2 = toInteger(Column_2)) ~> derivedColumn2",
				"lookup1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ID as integer,",
				"          TransactionDate as date,",
				"          StoreID as integer,",
				"          TerminalID as integer,",
				"          State as string,",
				"          Curr1 as decimal(10,2),",
				"          Curr2 as decimal(10,2),",
				"          Curr3 as decimal(10,2),",
				"          Curr4 as decimal(10,2),",
				"          Curr5 as decimal(10,2),",
				"          Curr6 as decimal(10,2),",
				"          Curr7 as decimal(10,2),",
				"          Curr8 as decimal(10,2),",
				"          Curr9 as decimal(10,2),",
				"          Curr10 as decimal(10,2),",
				"          Curr11 as decimal(10,2),",
				"          Curr12 as decimal(10,2),",
				"          Curr13 as decimal(10,2),",
				"          Curr14 as decimal(10,2),",
				"          Curr15 as decimal(10,2)",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          TransactionDate = TransDate,",
				"          StoreID = Column_2,",
				"          TerminalID = Column_3,",
				"          State = Column_4,",
				"          Curr1 = Column_5,",
				"          Curr2 = Column_6,",
				"          Curr3 = Column_7,",
				"          Curr4 = Column_8,",
				"          Curr5 = Column_9,",
				"          Curr6 = Column_10,",
				"          Curr7 = Column_11,",
				"          Curr8 = Column_12,",
				"          Curr9 = Column_13,",
				"          Curr10 = Column_14,",
				"          Curr11 = Column_15,",
				"          Curr12 = Column_16,",
				"          Curr13 = Column_17,",
				"          Curr14 = Column_18,",
				"          Curr15 = Column_19",
				"     )) ~> sink1"
			]
		}
	}
}